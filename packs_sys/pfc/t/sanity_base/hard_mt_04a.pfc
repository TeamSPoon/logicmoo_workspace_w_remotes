/* <module>
%
%  PFC is a language extension for prolog.
%
%  It adds a new type of module inheritance
%
% Dec 13, 2035
% Douglas Miles
*/
%  was_module(mt_01a,[]).

:- include(library(logicmoo_test_header)).
:- set_defaultAssertMt(myMt).

baseKB:mtHybrid(socialOneMt).
baseKB:mtHybrid(socialTwoMt).
%baseKB:mtHybrid(mt1).
%baseKB:mtHybrid(mt2).


mt1:predicateConventionMt(loves,socialOneMt).

mt2:predicateConventionMt(loves,socialTwoMt).
                                                             
:- sanity_check(mt1:fix_mp(clause(_,_),loves(x,y),M,P),(M:P==socialOneMt:loves(x,y);M:P==socialTwoMt:loves(x,y))).
:- sanity_check(fix_mp(clause(_,_),loves(x,y),M,P),(M:P==socialOneMt:loves(x,y);M:P==socialTwoMt:loves(x,y))).


:- sanity_check(fix_mp(clause(_,_),mt1:loves(x,y),M,P),(M:P==socialOneMt:loves(x,y);M:P==socialTwoMt:loves(x,y))).

loves(sally,joe).

:- xlisting(loves/2).

:- warn_fail_TODO(clause(socialOneMt:loves(_,_));clause(socialTwoMt:loves(_,_))).

accessable_love:- \+ clause_u(myMt:loves(_,_),_),!.
accessable_love:- clause_u(myMt:loves(_,_),_,Ref), \+ clause_property(Ref,module(myMt)),!.
:- warn_fail_TODO(myMt:accessable_love).




% EDIT: https://github.com/logicmoo/logicmoo_workspace/edit/master/packs_sys/pfc/t/sanity_base/hard_mt_04a.pfc 
% JENKINS: https://jenkins.logicmoo.org/job/logicmoo_workspace/lastBuild/testReport/logicmoo.pfc.test.sanity_base/HARD_MT_04A/logicmoo_pfc_test_sanity_base_HARD_MT_04A_JUnit/ 
% ISSUE_SEARCH: https://github.com/logicmoo/logicmoo_workspace/issues?q=is%3Aissue+label%3AHARD_MT_04A 

% ISSUE: https://github.com/logicmoo/logicmoo_workspace/issues/597
