/* <module>
%
%  PFC is a6 language extension for prolog.
%
%  It adds a6 new type of module inheritance
%
% Dec 13, 2035
% Douglas Miles
*/
%  was_module(mt_06a,[]).

:- include(library(logicmoo_test_header)).


%:- add_import_module(mt_01,baseKB,end).

:- set_defaultAssertMt(myMt).

mtProlog(code1).
mtHybrid(kb2).
mtHybrid(kb3).

% code1: (a6 <- b).
code1: (a:- printAll('$current_source_module'(_M))).


kb2: (b).

genlMt(kb2,code1).

kb2: (?- a6).

genlMt(kb3,kb2).

predicateConventionMt(a6,kb2).
%predicateConventionMt(P,MT)==>{kb_shared(MT:P)}.

%==> (baseKB:predicateConventionMt(a6,kb2)).

:- ain((kb3: (a6==>c))).


% :- mpred_must(clause(kb2:a6,_)).

% ISSUE: https://github.com/logicmoo/logicmoo_workspace/issues/ 
% EDIT: https://github.com/logicmoo/logicmoo_workspace/edit/master/packs_sys/pfc/t/sanity_base/mt_06_a.pfc 
% JENKINS: https://jenkins.logicmoo.org/job/logicmoo_workspace/lastBuild/testReport/logicmoo.pfc.test.sanity_base/MT_06_A/logicmoo_pfc_test_sanity_base_MT_06_A_JUnit/ 
% ISSUE_SEARCH: https://github.com/logicmoo/logicmoo_workspace/issues?q=is%3Aissue+label%3AMT_06_A 

