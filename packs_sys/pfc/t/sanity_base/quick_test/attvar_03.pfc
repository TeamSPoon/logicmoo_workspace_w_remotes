#!/usr/bin/env lmoo-junit
%
%  PFC is a language extension for prolog.. there is so much that can be done in this language extension to Prolog
%
% Dec 13, 2035
% Douglas Miles

%  was_module(sanity_attvar_03,[]).

:- expects_dialect(pfc).
:- use_module(library(pfc_test)).

:- include(library(logicmoo_test_header)).
:- if(\+ current_module(attvar_reader)).
:- use_module(library(logicmoo/attvar_reader)).
:- endif.
% :- '$set_source_module'(ABox),'$set_typein_module'(ABox).

:- ABox = user, '$set_source_module'(ABox),'$set_typein_module'(ABox).
% Tests Non-module Forward chaining of assertable attributed variables


:- debug_logicmoo(_).
:- nodebug_logicmoo(http(_)).
:- debug_logicmoo(logicmoo(_)).

:- mpred_trace_exec.
% :- expects_dialect(pfc).

:- dynamic(sk_out/1).
:- dynamic(sk_in/1).

% :- process_this_script.


sk_in(Ex)==>sk_out(Ex).

sk_in(foo).

:- read_attvars(true).
:- set_prolog_flag(access_level,system).

sk_in(avar([vn='Ex',sk='SKF-666'])).

:- listing(sk_out/1).
:- listing(sk_in/1).


:- must((sk_in(VAR),get_attr(VAR,sk,What),What='SKF-666')).



% EDIT: https://github.com/logicmoo/logicmoo_workspace/edit/master/packs_sys/pfc/t/sanity_base/attvar_03.pfc 
% JENKINS: https://jenkins.logicmoo.org/job/logicmoo_workspace/lastBuild/testReport/logicmoo.pfc.test.sanity_base/ATTVAR_03/logicmoo_pfc_test_sanity_base_ATTVAR_03_JUnit/ 
% ISSUE_SEARCH: https://github.com/logicmoo/logicmoo_workspace/issues?q=is%3Aissue+label%3AATTVAR_03 

% ISSUE: https://github.com/logicmoo/logicmoo_workspace/issues/633
